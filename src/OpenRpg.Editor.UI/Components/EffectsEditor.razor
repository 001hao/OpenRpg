@using OpenRpg.Editor.Infrastructure.Helpers
@using OpenRpg.Entities.Effects
@using OpenRpg.Entities.Requirements

<ListEditor Data="Effects" OnUpdate="OnUpdate" TItem="StaticEffect">
    <HeaderTemplate>
        <th><abbr title="Effect Type">Effect Type</abbr></th>
        <th><abbr title="Potency">Potency</abbr></th>
    </HeaderTemplate>
    <RowTemplate>
        <td>
            <div class="control">
                <div class="select is-fullwidth">
                    <select @bind="context.EffectType">
                        @foreach (var effectType in TypesHelper.GetEffectTypes)
                        {
                            <option value=@effectType.Id>@effectType.Name</option>
                        }
                    </select>
                </div>
            </div>
        </td>
        <td>
            <div class="control">
                <input class="input" type="text" @bind="context.Potency" />
            </div>
        </td>
    </RowTemplate>
    <NestedRowTemplate>
        <Accordion Title="Effect Requirements" HeaderClasses="is-info">
            <RequirementsEditor Requirements="context.Requirements" OnUpdate="requirements => UpdateRequirements(context, requirements)">
            </RequirementsEditor>
        </Accordion>
    </NestedRowTemplate>
</ListEditor>

@functions {
    [Parameter]
    public IEnumerable<StaticEffect> Effects { get; set; }

    [Parameter]
    public EventCallback<List<StaticEffect>> OnUpdate { get; set; }
    
    public void UpdateRequirements(StaticEffect currentStaticEffect, IReadOnlyCollection<Requirement> updatedRequirements)
    {
        currentStaticEffect.Requirements = updatedRequirements;
        StateHasChanged();
    }
}
